<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.service.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.health.model.po.Student" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="CHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="TIMESTAMP" />
    <result column="SFID" property="sfid" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="JOB" property="job" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="JG" property="jg" jdbcType="VARCHAR" />
    <result column="TCDID" property="tcdid" jdbcType="INTEGER" />
    <result column="LOGIN_ID" property="loginId" jdbcType="INTEGER" />
    <result column="JSFAID" property="jsfaid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, SEX, BIRTHDAY, SFID, PHONE, JOB, EMAIL, JG, TCDID, JSFAID ,LOGIN_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.health.model.po.Student" >
    insert into student (ID, NAME, SEX, BIRTHDAY, 
      SFID, PHONE, JOB, EMAIL, 
      JG, TCDID, JSFAID)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{sfid,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{jg,jdbcType=VARCHAR}, #{tcdid,jdbcType=INTEGER}, #{jsfaid,jdbcType=INTEGER}, #{loginId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.health.model.po.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="birthday != null" >
        BIRTHDAY,
      </if>
      <if test="sfid != null" >
        SFID,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="job != null" >
        JOB,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="jg != null" >
        JG,
      </if>
      <if test="tcdid != null" >
        TCDID,
      </if>
      <if test="jsfaid != null" >
        JSFAID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sfid != null" >
        #{sfid,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="jg != null" >
        #{jg,jdbcType=VARCHAR},
      </if>
      <if test="tcdid != null" >
        #{tcdid,jdbcType=INTEGER},
      </if>
      <if test="jsfaid != null" >
        #{jsfaid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.health.model.po.Student" >
    update student
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sfid != null" >
        SFID = #{sfid,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        JOB = #{job,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="jg != null" >
        JG = #{jg,jdbcType=VARCHAR},
      </if>
      <if test="tcdid != null" >
        TCDID = #{tcdid,jdbcType=INTEGER},
      </if>
      <if test="jsfaid != null" >
        JSFAID = #{jsfaid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.health.model.po.Student" >
    update student
    set NAME = #{name,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=CHAR},
      BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      SFID = #{sfid,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      JOB = #{job,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      JG = #{jg,jdbcType=VARCHAR},
      TCDID = #{tcdid,jdbcType=INTEGER},
      JSFAID = #{jsfaid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>